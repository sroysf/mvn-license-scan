************************
Server Side
************************
- Test
- Need a lot more test cases for different license scenarios
- Add test for situation where HttpConnection fails
- Add test for situation where results are unparsable (like a bogus version that maven central doesn't know about)

- A maven coordinate actually can have a list of licenses associated with it, not just one. 

- Implement the proxy REST service 
	- Expose the query service via JSON Rest web service


- Implement the UI so people can manipulate / add licenses manually for those situations where you can't find them in mvn central
	 - Can come later, since we already have Salesforce UI!
	 
- *** Remove VMForce references from archetype, pom file

************************
Client Side
************************

- Client should (takes policy name as parameter) :
	- Execute maven dependency:resolve
	- Take the results, turn it into a proper JSON list, post, and get back a reply
	- Write out the results as XML
	- Pass it through some kind of renderer, like XSLT transform, to convert it into a visually useful report
	
************************
Longer term
************************

- Implement the client functionality as a maven plugin.
- Use permissions to control who can actually edit the server side policy


************************
Issues
************************

- Debugging didn't work because of line numbers with data nucleus
- SLF4J version had to be upgraded to 1.6.0 in order to run with spring in STS. 
	- Switch to normal Eclipse and try it out. John suggested WTP, running Tomcat inside
- Why does it look at cliforce?
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
- User's password is echoed to the console
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from environment variable: force://vmf01.t.salesforce.com;user=saptarshi.roy@salesforce.com;password=testing123R10dOD0WoZd9WCbN5SLZjG4EM
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from environment variable: force://vmf01.t.salesforce.com;user=saptarshi.roy@salesforce.com;password=testing123R10dOD0WoZd9WCbN5SLZjG4EM
- Why does it seem to create so many connections?
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
	INFO : com.force.sdk.connector - Connection : Creating forceDatabase from cliforce connections file: /home/javacloud/.force/cliforce_urls
- The long startup time for persistence : can you disable it temporarily
- More than one positional parameter always ends up using the first one