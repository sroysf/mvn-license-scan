************************
Server Side
************************
- Test
- Need a lot more test cases for different license scenarios
- Add test for situation where HttpConnection fails
- Add test for situation where results are unparsable (like a bogus version that maven central doesn't know about)

- A maven coordinate actually can have a list of licenses associated with it, not just one. 

- Implement the proxy REST service 
	- Expose the query service via JSON Rest web service


- Implement the UI so people can manipulate / add licenses manually for those situations where you can't find them in mvn central
	 - Can come later, since we already have Salesforce UI!
	 
- *** Remove VMForce references from archetype, pom file

************************
Client Side
************************

- Client should (takes policy name as parameter) :
	- Execute maven dependency:resolve
	- Take the results, turn it into a proper JSON list, post, and get back a reply
	- Write out the results as XML
	- Pass it through some kind of renderer, like XSLT transform, to convert it into a visually useful report
	
************************
Longer term
************************

- Implement the client functionality as a maven plugin.
- Use permissions to control who can actually edit the server side policy


************************
Notes
************************

- Add new license
- Edit license
- Edit maven artifact
- Add new artifact